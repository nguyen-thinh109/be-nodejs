<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Pending tasks!!!</title>
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="/style.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Oswald:wght@200..700&display=swap" rel="stylesheet">
  </head>

  <body class="relative">
    <main>
      <div class="relative mb-4">
        <h1 class="text-center text-xl font-bold">List</h1>
        <div class="absolute top-0 right-0 transform translate-middle w-6 h-6 grid place-items-center" onclick="signOut()"><i class="fa-solid fa-arrow-right-from-bracket"></i></div>
      </div>

      <h2 class="mb-4 text-lg font-semibold underline">Pending</h2>
      <% if (tasks.length) { %>
      <ul class="list">
        <% for (let item of tasks) { %>
        <li class="text-sm mb-4">
          <div class="flex items-center border-b border-solid border-gray-400 pb-4">
            <input type="checkbox" name="<%= item.id %>" id="<%= item.id %>" class="mr-2 block" onchange="handleSelectionChange(event, '<%= item.id %>', '<%= item.task %>')" />
            <span class="block flex-1">
              <%= item.task %>
            </span>
            <div class="ml-3">
              <div class="w-6 h-6 grid place-items-center mr-2" onclick="handleEditTask('<%= item.id %>', '<%= item.task %>')"><i class="fa-regular fa-pen-to-square"></i></div>
              <div class="w-6 h-6 grid place-items-center" onclick="handleDeletion('<%= item.id %>')"><i class="fa-regular fa-trash-can"></i></div>
            </div>
          </div>
        </li>
        <% } %>
      </ul>
      <% } else { %>
      <p class="text-center text-sm italic mb-4">No data!</p>
      <% } %>

      <div class="flex justify-between items-center my-8">
        <button id="add" class="px-3 py-2 text-white bg-green-600 text-sm italic rounded-md" onclick="handleAddTask()">Add new</button>
        <a class="italic text-sm" href="/completed">See completed</a>
      </div>
    </main>

    <!-- Loading -->
    <%- include('./comp/loading') %>

    <!-- Result pop-up -->
    <%- include('./comp/success-popup') %>
    <%- include('./comp/fail-popup') %>

    <!-- Add/Edit task pop-up -->
    <div id="pop-up" class="p-4 h-full w-full absolute z-30 top-0 left-0 bg-nordic hidden">
      <h1 class="text-center mb-4 text-xl font-bold title-taskPopup"></h1>
      <div class="w-full">
          <textarea name="task" id="edit-task-input" cols="30" rows="5" class="w-full text-black p-2 border border-gray-200 focus:outline-none focus:ring focus:border-blue-300 rounded" required></textarea>
          <textarea name="task" id="add-task-input" cols="30" rows="5" class="w-full text-black p-2 border border-gray-200 focus:outline-none focus:ring focus:border-blue-300 rounded" required></textarea>

          <div class="flex justify-between items-center my-8">
              <button type="submit" id="add-btn" class="px-3 py-2 text-white bg-green-600 text-sm italic rounded-md" onclick="addNewTask()">Add new</button>
              <button type="submit" id="edit-btn" class="px-3 py-2 text-white bg-green-600 text-sm italic rounded-md" onclick="confirmEditTask()">Update</button>
              <span class="italic text-sm" onclick="hideTaskPopup()">See pending</span>
              <a class="italic text-sm" href="/completed">See completed</a>
          </div>
      </div>
    </div>

    <script>      
        const loading = document.querySelector('.loading');
        const successPopup = document.querySelector('.success');
        const failPopup = document.querySelector('.fail');
        const taskPopup = document.querySelector('#pop-up');
        const addTaskInput = document.querySelector('#add-task-input');
        const editTaskInput = document.querySelector('#edit-task-input');
        const addTaskBtn = document.querySelector('#add-btn');
        const editTaskBtn = document.querySelector('#edit-btn');
        const titlePopup = document.querySelector('.title-taskPopup');
        const accessToken = localStorage.getItem('accessToken');
        let currentEditingTaskId = '';
        let timer;

        function handleSelectionChange(event, id, task) {
            console.log('selected', event.target.checked, id, task);
            const requestBody = JSON.stringify({ id, task });

            if (event.target.checked) {
              loading.classList.remove('hidden');

              fetch('/completed', { method: 'POST', body: requestBody, headers: { "Content-Type": "application/json" } })
              .then(res => res.json())
              .then((data) => {
                  console.log('handleChange', data);
                  if (data?.success) {
                    loading.classList.add('hidden');
                    successPopup.classList.remove('hidden');

                    timer = setTimeout(() => {
                      window.location.reload();
                    }, 2000)
                  }                    
                })
              .catch((err) => console.log(err))
            }
        }

        function handleAddTask() {
          titlePopup.innerText = 'Add Task';
          taskPopup.classList.remove('hidden');

          editTaskBtn.classList.add('hidden');
          editTaskInput.classList.add('hidden');
        }

        function addNewTask() {          
          console.log('addNewTask');          
          const newTaskContent = addTaskInput.value;
          const requestBody = JSON.stringify({ task: newTaskContent, action: 'ADD' });

          taskPopup.classList.add('hidden');
          loading.classList.remove('hidden');
          clearTimeout(timer);
          
          fetch('/pending', { method: 'POST', body: requestBody, headers: { "Content-Type": "application/json" }})
              .then(res => res.json())
              .then((data) => {
                console.log('fetch pending', data);
                loading.classList.add('hidden');
                  if (data?.success) {
                    successPopup.classList.remove('hidden');

                    timer = setTimeout(() => {
                      window.location.reload();
                    }, 2000)
                  } else {
                    failPopup.classList.remove('hidden');

                    timer = setTimeout(() => {
                      failPopup.classList.add('hidden');
                    }, 3000)
                  }
              })
              .catch((err) => console.log(err))
        }

        function handleEditTask(taskId, taskContent) {
          titlePopup.innerText = 'Edit Task';
          taskPopup.classList.remove('hidden');

          addTaskBtn.classList.add('hidden');
          addTaskInput.classList.add('hidden');

          editTaskInput.value = taskContent;
          currentEditingTaskId = taskId;
        }

        function confirmEditTask() {
          let editedContent = editTaskInput.value;
          let requestBody = JSON.stringify({id: currentEditingTaskId, task: editedContent});
          
          taskPopup.classList.add('hidden');
          loading.classList.remove('hidden');

          fetch(`/pending/${currentEditingTaskId}`, { method: 'PUT', body: requestBody, headers: { "Content-Type": "application/json" }})
            .then(res => res.json())
            .then((data) => {
              console.log(data)
              if (data?.success) {
                successPopup.classList.remove('hidden');

                timer = setTimeout(() => {
                  window.location.reload();
                }, 1500)
              }
            })
            .catch((err) => console.log(err))
        }

        function hideTaskPopup() {
          taskPopup.classList.add('hidden');
        }
        
        function handleDeletion(id) {
          console.log('delete', id);
          loading.classList.remove('hidden');
          clearTimeout(timer);

          fetch(`/pending/${id}`, { method: 'DELETE' })
            .then(res => res.json())
            .then((data) => {
              console.log(data)
              if (data?.success) {
                successPopup.classList.remove('hidden');

                timer = setTimeout(() => {
                  window.location.reload();
                }, 1500)
              } else {
                failPopup.classList.remove('hidden');
                
                timer = setTimeout(() => {
                  failPopup.classList.add('hidden');
                }, 3000)
              }
            })
            .catch((err) => console.log(err))
        }

        function signOut() {
          console.log('signOut');
          localStorage.removeItem('accessToken');

          fetch("/sign-out/", { method: 'POST' })
          .then(res => res.json())
          .then((data) => {
            console.log(data);
          }).catch((err) => console.log(err))
        }
    </script>
  </body>
</html>
